@page "/"
@using MiniProjectRaddit.Model
@using MiniProjectRaddit.Service
@inject DbService dbService


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@if (MainLayoutAndData.Users.Count == 0)
{
    <h2>Loading Users....</h2>
}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>PostDateTime</th>
                <th>Votes</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var thread in MainLayoutAndData.ThreadPosts)
            {
                <tr class="titlebox">
                    <td> <a href="@($"https://localhost:7082/threadPost/{MainLayoutAndData.ThreadPosts.IndexOf(thread)}")">@thread.Title</a> </td>
                    <td>@thread.PostDateTime</td>
                    <td>@thread.Vote</td>

                    <button class="fa fa-thumbs-up" style="padding:2px;color:green; background-color:white;font-size:25px; border-style:none"
                    @onclick="() => ThreadPostLike(thread.ThreadPost_Id)"></button>

                    <button class="fa fa-thumbs-down" style="padding:2px;color:red;background-color:white;font-size:25px; border-style:none"
                    @onclick="() => ThreadPostDislike(thread.ThreadPost_Id)"></button>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        StateHasChanged();

        //Won't have more than one subsribed to "RefreshPage"
        MainLayoutAndData.RefreshPage -= RefreshPage;
        MainLayoutAndData.RefreshPage += RefreshPage;
    }

    /// <summary>
    /// Refresh the page, when all data is in Users,Comments and ThreadPosts In script "MainLayoutAndData"
    /// Only used for when the website is open in this page at the start
    /// </summary>
    private void RefreshPage()
    {
        StateHasChanged();
    }
    private void ThreadPostLike(long threadPost_id)
    {
        ThreadPost threadPost = MainLayoutAndData.ThreadPosts.FirstOrDefault(t => t.ThreadPost_Id == threadPost_id);
        threadPost.Vote += 1;
        dbService.PutThreadPostVote(threadPost);
    }

    private void ThreadPostDislike(long threadPost_id)
    {
         ThreadPost threadPost = MainLayoutAndData.ThreadPosts.FirstOrDefault(t => t.ThreadPost_Id == threadPost_id);
         threadPost.Vote -= 1;
         dbService.PutThreadPostVote(threadPost);
    }
}